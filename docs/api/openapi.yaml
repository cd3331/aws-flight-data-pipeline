openapi: 3.0.3
info:
  title: Flight Data Pipeline API
  description: |
    The Flight Data Pipeline API provides access to real-time and historical flight data, 
    aggregated analytics, and system monitoring capabilities. This API powers the flight 
    tracking and analysis platform with comprehensive data access endpoints.
    
    ## Features
    - Real-time flight tracking data
    - Historical flight analytics
    - Geospatial flight queries
    - Data quality metrics
    - System health monitoring
    
    ## Authentication
    This API uses API key authentication. Include your API key in the `X-API-Key` header.
    
    ## Rate Limiting
    - Standard tier: 1000 requests/hour
    - Premium tier: 10000 requests/hour
    - Enterprise tier: Unlimited
    
    ## Versioning
    This API uses URL path versioning (e.g., `/v1/`, `/v2/`). The current version is v1.
    
  version: "1.0.0"
  contact:
    name: Flight Data Pipeline Team
    email: api-support@flightdata-pipeline.com
    url: https://docs.flightdata-pipeline.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: https://flightdata-pipeline.com/terms

servers:
  - url: https://api.flightdata-pipeline.com/v1
    description: Production server
  - url: https://api-staging.flightdata-pipeline.com/v1
    description: Staging server
  - url: https://api-dev.flightdata-pipeline.com/v1
    description: Development server

security:
  - ApiKeyAuth: []

paths:
  /health:
    get:
      summary: Health check endpoint
      description: Returns the current health status of the API and its dependencies
      operationId: getHealthStatus
      tags:
        - System
      security: []
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'
              example:
                status: "healthy"
                timestamp: "2024-12-02T10:30:00Z"
                version: "1.0.0"
                services:
                  database: "healthy"
                  external_api: "healthy"
                  cache: "healthy"
        '503':
          description: API is unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatus'

  /version:
    get:
      summary: API version information
      description: Returns version information and build details
      operationId: getVersionInfo
      tags:
        - System
      security: []
      responses:
        '200':
          description: Version information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionInfo'

  /flights:
    get:
      summary: Get flight data
      description: |
        Retrieve flight data based on various filters including geographic bounds,
        time ranges, and flight characteristics. Results are paginated and can be
        sorted by multiple criteria.
      operationId: getFlights
      tags:
        - Flights
      parameters:
        - name: lamin
          in: query
          description: Minimum latitude for bounding box
          required: false
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
          example: 45.8389
        - name: lomin
          in: query
          description: Minimum longitude for bounding box
          required: false
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
          example: 5.9962
        - name: lamax
          in: query
          description: Maximum latitude for bounding box
          required: false
          schema:
            type: number
            format: float
            minimum: -90
            maximum: 90
          example: 47.8229
        - name: lomax
          in: query
          description: Maximum longitude for bounding box
          required: false
          schema:
            type: number
            format: float
            minimum: -180
            maximum: 180
          example: 10.5226
        - name: time_begin
          in: query
          description: Start time for time range filter (Unix timestamp)
          required: false
          schema:
            type: integer
            format: int64
          example: 1701518400
        - name: time_end
          in: query
          description: End time for time range filter (Unix timestamp)
          required: false
          schema:
            type: integer
            format: int64
          example: 1701522000
        - name: icao24
          in: query
          description: Filter by specific aircraft ICAO 24-bit address
          required: false
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{6}$'
          example: "3c6444"
        - name: callsign
          in: query
          description: Filter by flight callsign
          required: false
          schema:
            type: string
            maxLength: 8
          example: "UAL123"
        - name: altitude_min
          in: query
          description: Minimum altitude filter (meters)
          required: false
          schema:
            type: number
            format: float
            minimum: 0
          example: 10000
        - name: altitude_max
          in: query
          description: Maximum altitude filter (meters)
          required: false
          schema:
            type: number
            format: float
            minimum: 0
          example: 15000
        - name: limit
          in: query
          description: Maximum number of results to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 1000
            default: 100
          example: 50
        - name: offset
          in: query
          description: Number of results to skip (for pagination)
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
          example: 0
        - name: sort
          in: query
          description: Sort order for results
          required: false
          schema:
            type: string
            enum: [timestamp_asc, timestamp_desc, altitude_asc, altitude_desc, callsign_asc, callsign_desc]
            default: timestamp_desc
          example: "timestamp_desc"
      responses:
        '200':
          description: Successful response with flight data
          headers:
            X-RateLimit-Limit:
              description: Request limit per hour
              schema:
                type: integer
            X-RateLimit-Remaining:
              description: Requests remaining in current window
              schema:
                type: integer
            X-RateLimit-Reset:
              description: Time when rate limit resets (Unix timestamp)
              schema:
                type: integer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightDataResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '429':
          $ref: '#/components/responses/RateLimitExceeded'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /flights/{icao24}:
    get:
      summary: Get specific aircraft data
      description: Retrieve detailed information for a specific aircraft by ICAO 24-bit address
      operationId: getAircraftData
      tags:
        - Flights
      parameters:
        - name: icao24
          in: path
          description: Aircraft ICAO 24-bit address
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{6}$'
          example: "3c6444"
        - name: time_begin
          in: query
          description: Start time for historical data (Unix timestamp)
          required: false
          schema:
            type: integer
            format: int64
        - name: time_end
          in: query
          description: End time for historical data (Unix timestamp)
          required: false
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Aircraft data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AircraftDataResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /flights/statistics:
    get:
      summary: Get flight statistics
      description: Retrieve aggregated statistics about flights in the system
      operationId: getFlightStatistics
      tags:
        - Analytics
      parameters:
        - name: time_begin
          in: query
          description: Start time for statistics period
          required: false
          schema:
            type: integer
            format: int64
        - name: time_end
          in: query
          description: End time for statistics period
          required: false
          schema:
            type: integer
            format: int64
        - name: group_by
          in: query
          description: Grouping criteria for statistics
          required: false
          schema:
            type: string
            enum: [hour, day, week, month, airline, aircraft_type, country]
            default: day
      responses:
        '200':
          description: Flight statistics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlightStatisticsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /airports:
    get:
      summary: Get airport information
      description: Retrieve airport data and statistics
      operationId: getAirports
      tags:
        - Airports
      parameters:
        - name: country
          in: query
          description: Filter by country code (ISO 3166-1 alpha-2)
          required: false
          schema:
            type: string
            pattern: '^[A-Z]{2}$'
          example: "US"
        - name: region
          in: query
          description: Filter by geographic region
          required: false
          schema:
            type: string
        - name: iata
          in: query
          description: Filter by IATA airport code
          required: false
          schema:
            type: string
            pattern: '^[A-Z]{3}$'
          example: "SFO"
        - name: icao
          in: query
          description: Filter by ICAO airport code
          required: false
          schema:
            type: string
            pattern: '^[A-Z]{4}$'
          example: "KSFO"
        - name: limit
          in: query
          description: Maximum number of results
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 500
            default: 50
        - name: offset
          in: query
          description: Number of results to skip
          required: false
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: Airport data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportDataResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

  /airports/{icao}/arrivals:
    get:
      summary: Get airport arrivals
      description: Retrieve arrival information for a specific airport
      operationId: getAirportArrivals
      tags:
        - Airports
      parameters:
        - name: icao
          in: path
          description: ICAO airport code
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{4}$'
        - name: time_begin
          in: query
          description: Start time for arrivals data
          required: false
          schema:
            type: integer
            format: int64
        - name: time_end
          in: query
          description: End time for arrivals data
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
      responses:
        '200':
          description: Airport arrivals data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportFlightResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'

  /airports/{icao}/departures:
    get:
      summary: Get airport departures
      description: Retrieve departure information for a specific airport
      operationId: getAirportDepartures
      tags:
        - Airports
      parameters:
        - name: icao
          in: path
          description: ICAO airport code
          required: true
          schema:
            type: string
            pattern: '^[A-Z]{4}$'
        - name: time_begin
          in: query
          description: Start time for departures data
          required: false
          schema:
            type: integer
            format: int64
        - name: time_end
          in: query
          description: End time for departures data
          required: false
          schema:
            type: integer
            format: int64
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 200
            default: 50
      responses:
        '200':
          description: Airport departures data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AirportFlightResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '400':
          $ref: '#/components/responses/BadRequest'

  /data-quality:
    get:
      summary: Get data quality metrics
      description: Retrieve data quality metrics and validation results
      operationId: getDataQualityMetrics
      tags:
        - System
      parameters:
        - name: date
          in: query
          description: Specific date for quality metrics (YYYY-MM-DD)
          required: false
          schema:
            type: string
            format: date
          example: "2024-12-02"
        - name: metric_type
          in: query
          description: Type of quality metric to retrieve
          required: false
          schema:
            type: string
            enum: [completeness, accuracy, timeliness, consistency, validity]
      responses:
        '200':
          description: Data quality metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataQualityResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: |
        API key for authentication. Contact support to obtain an API key.
        Include the key in the X-API-Key header for all requests.

  schemas:
    HealthStatus:
      type: object
      required:
        - status
        - timestamp
        - version
      properties:
        status:
          type: string
          enum: [healthy, degraded, unhealthy]
          description: Overall health status
        timestamp:
          type: string
          format: date-time
          description: Timestamp when health was checked
        version:
          type: string
          description: API version
        services:
          type: object
          properties:
            database:
              type: string
              enum: [healthy, degraded, unhealthy]
            external_api:
              type: string
              enum: [healthy, degraded, unhealthy]
            cache:
              type: string
              enum: [healthy, degraded, unhealthy]
        response_time_ms:
          type: integer
          description: Response time in milliseconds
        uptime_seconds:
          type: integer
          description: System uptime in seconds

    VersionInfo:
      type: object
      required:
        - version
        - build
        - environment
      properties:
        version:
          type: string
          description: API version number
          example: "1.0.0"
        build:
          type: string
          description: Build identifier
          example: "2024.12.02.1"
        environment:
          type: string
          description: Deployment environment
          example: "production"
        git_commit:
          type: string
          description: Git commit SHA
          example: "abc123def456"
        build_date:
          type: string
          format: date-time
          description: When this version was built

    FlightData:
      type: object
      required:
        - icao24
        - callsign
        - origin_country
        - time_position
        - last_contact
        - longitude
        - latitude
        - baro_altitude
        - on_ground
        - velocity
        - true_track
        - vertical_rate
        - geo_altitude
        - squawk
        - spi
        - position_source
      properties:
        icao24:
          type: string
          description: Unique ICAO 24-bit address
          example: "3c6444"
        callsign:
          type: string
          description: Flight callsign
          example: "UAL123  "
          nullable: true
        origin_country:
          type: string
          description: Country of aircraft registration
          example: "United States"
        time_position:
          type: integer
          format: int64
          description: Unix timestamp of last position update
          example: 1701518745
          nullable: true
        last_contact:
          type: integer
          format: int64
          description: Unix timestamp of last received message
          example: 1701518745
        longitude:
          type: number
          format: float
          description: Longitude in decimal degrees
          example: -122.4194
          nullable: true
        latitude:
          type: number
          format: float
          description: Latitude in decimal degrees
          example: 37.7749
          nullable: true
        baro_altitude:
          type: number
          format: float
          description: Barometric altitude in meters
          example: 11582.4
          nullable: true
        on_ground:
          type: boolean
          description: Whether aircraft is on ground
          example: false
        velocity:
          type: number
          format: float
          description: Ground speed in m/s
          example: 231.7
          nullable: true
        true_track:
          type: number
          format: float
          description: True track angle in degrees
          example: 45.5
          nullable: true
        vertical_rate:
          type: number
          format: float
          description: Vertical rate in m/s
          example: 2.5
          nullable: true
        geo_altitude:
          type: number
          format: float
          description: Geometric altitude in meters
          example: 11650.2
          nullable: true
        squawk:
          type: string
          description: Squawk code
          example: "7700"
          nullable: true
        spi:
          type: boolean
          description: Special position identification
          example: false
        position_source:
          type: integer
          description: Position source (0=ADS-B, 1=ASTERIX, 2=MLAT)
          example: 0

    FlightDataResponse:
      type: object
      required:
        - flights
        - pagination
        - metadata
      properties:
        flights:
          type: array
          items:
            $ref: '#/components/schemas/FlightData'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    AircraftDataResponse:
      type: object
      required:
        - icao24
        - flights
        - aircraft_info
      properties:
        icao24:
          type: string
          example: "3c6444"
        flights:
          type: array
          items:
            $ref: '#/components/schemas/FlightData'
        aircraft_info:
          type: object
          properties:
            manufacturer:
              type: string
              example: "Boeing"
            model:
              type: string
              example: "737-800"
            owner:
              type: string
              example: "United Airlines"
            registration:
              type: string
              example: "N12345"

    Airport:
      type: object
      required:
        - icao
        - name
        - country
        - latitude
        - longitude
      properties:
        icao:
          type: string
          description: ICAO airport code
          example: "KSFO"
        iata:
          type: string
          description: IATA airport code
          example: "SFO"
          nullable: true
        name:
          type: string
          description: Airport name
          example: "San Francisco International Airport"
        city:
          type: string
          description: Airport city
          example: "San Francisco"
        country:
          type: string
          description: Country name
          example: "United States"
        latitude:
          type: number
          format: float
          description: Airport latitude
          example: 37.6213
        longitude:
          type: number
          format: float
          description: Airport longitude
          example: -122.3790
        altitude:
          type: number
          format: float
          description: Airport altitude in meters
          example: 4.0
        timezone:
          type: string
          description: Airport timezone
          example: "America/Los_Angeles"

    AirportDataResponse:
      type: object
      required:
        - airports
        - pagination
        - metadata
      properties:
        airports:
          type: array
          items:
            $ref: '#/components/schemas/Airport'
        pagination:
          $ref: '#/components/schemas/PaginationInfo'
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    AirportFlightResponse:
      type: object
      required:
        - airport
        - flights
        - pagination
      properties:
        airport:
          $ref: '#/components/schemas/Airport'
        flights:
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/FlightData'
              - type: object
                properties:
                  scheduled_time:
                    type: integer
                    format: int64
                    description: Scheduled arrival/departure time
                  estimated_time:
                    type: integer
                    format: int64
                    description: Estimated arrival/departure time
                  actual_time:
                    type: integer
                    format: int64
                    description: Actual arrival/departure time
        pagination:
          $ref: '#/components/schemas/PaginationInfo'

    FlightStatisticsResponse:
      type: object
      required:
        - statistics
        - period
        - metadata
      properties:
        statistics:
          type: array
          items:
            type: object
            properties:
              period:
                type: string
                description: Time period for this statistic
                example: "2024-12-02"
              total_flights:
                type: integer
                description: Total number of flights
                example: 15420
              unique_aircraft:
                type: integer
                description: Number of unique aircraft
                example: 8750
              countries:
                type: array
                items:
                  type: object
                  properties:
                    country:
                      type: string
                      example: "United States"
                    flight_count:
                      type: integer
                      example: 5230
              airlines:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: "United Airlines"
                    flight_count:
                      type: integer
                      example: 342
        period:
          type: object
          properties:
            start:
              type: string
              format: date-time
            end:
              type: string
              format: date-time
            group_by:
              type: string
              example: "day"
        metadata:
          $ref: '#/components/schemas/ResponseMetadata'

    DataQualityResponse:
      type: object
      required:
        - quality_metrics
        - date
        - overall_score
      properties:
        quality_metrics:
          type: object
          properties:
            completeness:
              type: object
              properties:
                score:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 1
                  example: 0.95
                total_records:
                  type: integer
                  example: 1000000
                complete_records:
                  type: integer
                  example: 950000
            accuracy:
              type: object
              properties:
                score:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 1
                  example: 0.98
                validation_errors:
                  type: integer
                  example: 2000
            timeliness:
              type: object
              properties:
                score:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 1
                  example: 0.92
                avg_delay_minutes:
                  type: number
                  format: float
                  example: 3.5
            consistency:
              type: object
              properties:
                score:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 1
                  example: 0.96
                inconsistent_records:
                  type: integer
                  example: 1500
            validity:
              type: object
              properties:
                score:
                  type: number
                  format: float
                  minimum: 0
                  maximum: 1
                  example: 0.97
                invalid_records:
                  type: integer
                  example: 800
        date:
          type: string
          format: date
          example: "2024-12-02"
        overall_score:
          type: number
          format: float
          minimum: 0
          maximum: 1
          example: 0.956
        recommendations:
          type: array
          items:
            type: string
          example:
            - "Improve data validation for altitude values"
            - "Reduce processing delays during peak hours"

    PaginationInfo:
      type: object
      required:
        - limit
        - offset
        - total
        - has_more
      properties:
        limit:
          type: integer
          description: Number of items per page
          example: 50
        offset:
          type: integer
          description: Number of items skipped
          example: 0
        total:
          type: integer
          description: Total number of items available
          example: 15420
        has_more:
          type: boolean
          description: Whether more items are available
          example: true
        next_offset:
          type: integer
          description: Offset for next page
          example: 50
          nullable: true

    ResponseMetadata:
      type: object
      required:
        - timestamp
        - request_id
        - processing_time_ms
      properties:
        timestamp:
          type: string
          format: date-time
          description: Response timestamp
          example: "2024-12-02T10:30:00Z"
        request_id:
          type: string
          description: Unique request identifier
          example: "req_abc123def456"
        processing_time_ms:
          type: integer
          description: Processing time in milliseconds
          example: 145
        data_source:
          type: string
          description: Source of the data
          example: "live"
          enum: [live, cache, historical]
        cache_status:
          type: string
          description: Cache hit/miss status
          example: "hit"
          enum: [hit, miss, disabled]

    Error:
      type: object
      required:
        - error
        - message
        - request_id
        - timestamp
      properties:
        error:
          type: string
          description: Error type
          example: "INVALID_PARAMETER"
        message:
          type: string
          description: Human-readable error message
          example: "Invalid latitude value: must be between -90 and 90"
        request_id:
          type: string
          description: Unique request identifier
          example: "req_abc123def456"
        timestamp:
          type: string
          format: date-time
          description: Error timestamp
          example: "2024-12-02T10:30:00Z"
        details:
          type: object
          description: Additional error details
          additionalProperties: true
        suggestions:
          type: array
          items:
            type: string
          description: Suggestions for fixing the error
          example:
            - "Check that latitude is a number between -90 and 90"
            - "Ensure all required parameters are provided"

  responses:
    BadRequest:
      description: Bad request - invalid parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INVALID_PARAMETER"
            message: "Invalid latitude value: must be between -90 and 90"
            request_id: "req_abc123def456"
            timestamp: "2024-12-02T10:30:00Z"
            details:
              parameter: "lamin"
              provided_value: "abc"
              expected_type: "number"

    Unauthorized:
      description: Unauthorized - invalid or missing API key
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "UNAUTHORIZED"
            message: "Invalid API key provided"
            request_id: "req_abc123def456"
            timestamp: "2024-12-02T10:30:00Z"
            suggestions:
              - "Check that your API key is correct"
              - "Ensure the X-API-Key header is included"

    Forbidden:
      description: Forbidden - insufficient permissions
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INSUFFICIENT_PERMISSIONS"
            message: "Your API key does not have access to this resource"
            request_id: "req_abc123def456"
            timestamp: "2024-12-02T10:30:00Z"

    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "NOT_FOUND"
            message: "Aircraft with ICAO24 '3c6444' not found"
            request_id: "req_abc123def456"
            timestamp: "2024-12-02T10:30:00Z"

    RateLimitExceeded:
      description: Rate limit exceeded
      headers:
        X-RateLimit-Limit:
          description: Request limit per hour
          schema:
            type: integer
        X-RateLimit-Remaining:
          description: Requests remaining in current window
          schema:
            type: integer
        X-RateLimit-Reset:
          description: Time when rate limit resets (Unix timestamp)
          schema:
            type: integer
        Retry-After:
          description: Seconds to wait before retrying
          schema:
            type: integer
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "RATE_LIMIT_EXCEEDED"
            message: "Rate limit exceeded: 1000 requests per hour"
            request_id: "req_abc123def456"
            timestamp: "2024-12-02T10:30:00Z"
            details:
              limit: 1000
              window: "hour"
              reset_time: 1701522000

    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            error: "INTERNAL_SERVER_ERROR"
            message: "An unexpected error occurred"
            request_id: "req_abc123def456"
            timestamp: "2024-12-02T10:30:00Z"

tags:
  - name: System
    description: System health and information endpoints
  - name: Flights
    description: Flight data and tracking endpoints
  - name: Analytics
    description: Flight analytics and statistics endpoints
  - name: Airports
    description: Airport information and flight data endpoints